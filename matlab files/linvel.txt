// Linear velocities of 8 test points on UR5 robot 
[-1.0*a_2*cos(theta_2)*sin(theta_1), -1.0*a_2*cos(theta_1)*sin(theta_2), 0, 0, 0, 0],
[a_2*cos(theta_1)*cos(theta_2), -1.0*a_2*sin(theta_1)*sin(theta_2), 0, 0, 0, 0],
[0, a_2*cos(theta_2), 0, 0, 0, 0],
[-0.25*sin(theta_1)*(a_3*cos(theta_2 + theta_3) + 4.0*a_2*cos(theta_2)), -0.25*cos(theta_1)*(a_3*sin(theta_2 + theta_3) + 4.0*a_2*sin(theta_2)), -0.25*a_3*sin(theta_2 + theta_3)*cos(theta_1), 0, 0, 0],
[0.25*cos(theta_1)*(a_3*cos(theta_2 + theta_3) + 4.0*a_2*cos(theta_2)), -0.25*sin(theta_1)*(a_3*sin(theta_2 + theta_3) + 4.0*a_2*sin(theta_2)), -0.25*a_3*sin(theta_2 + theta_3)*sin(theta_1), 0, 0, 0],
[0, 0.25*a_3*cos(theta_2 + theta_3) + a_2*cos(theta_2), 0.25*a_3*cos(theta_2 + theta_3), 0, 0, 0],
[-0.5*sin(theta_1)*(a_3*cos(theta_2 + theta_3) + 2.0*a_2*cos(theta_2)), -0.5*cos(theta_1)*(a_3*sin(theta_2 + theta_3) + 2.0*a_2*sin(theta_2)), -0.5*a_3*sin(theta_2 + theta_3)*cos(theta_1), 0, 0, 0],
[0.5*cos(theta_1)*(a_3*cos(theta_2 + theta_3) + 2.0*a_2*cos(theta_2)), -0.5*sin(theta_1)*(a_3*sin(theta_2 + theta_3) + 2.0*a_2*sin(theta_2)), -0.5*a_3*sin(theta_2 + theta_3)*sin(theta_1), 0, 0, 0],
[0, 0.5*a_3*cos(theta_2 + theta_3) + a_2*cos(theta_2), 0.5*a_3*cos(theta_2 + theta_3), 0, 0, 0],
[-0.25*sin(theta_1)*(3.0*a_3*cos(theta_2 + theta_3) + 4.0*a_2*cos(theta_2)), -0.25*cos(theta_1)*(3.0*a_3*sin(theta_2 + theta_3) + 4.0*a_2*sin(theta_2)), -0.75*a_3*sin(theta_2 + theta_3)*cos(theta_1), 0, 0, 0],
[0.25*cos(theta_1)*(3.0*a_3*cos(theta_2 + theta_3) + 4.0*a_2*cos(theta_2)), -0.25*sin(theta_1)*(3.0*a_3*sin(theta_2 + theta_3) + 4.0*a_2*sin(theta_2)), -0.75*a_3*sin(theta_2 + theta_3)*sin(theta_1), 0, 0, 0],
[0, 0.75*a_3*cos(theta_2 + theta_3) + a_2*cos(theta_2), 0.75*a_3*cos(theta_2 + theta_3), 0, 0, 0],
[-1.0*sin(theta_1)*(a_3*cos(theta_2 + theta_3) + a_2*cos(theta_2)), -1.0*cos(theta_1)*(a_3*sin(theta_2 + theta_3) + a_2*sin(theta_2)), -1.0*a_3*sin(theta_2 + theta_3)*cos(theta_1), 0, 0, 0],
[cos(theta_1)*(a_3*cos(theta_2 + theta_3) + a_2*cos(theta_2)), -1.0*sin(theta_1)*(a_3*sin(theta_2 + theta_3) + a_2*sin(theta_2)), -1.0*a_3*sin(theta_2 + theta_3)*sin(theta_1), 0, 0, 0],
[0, a_3*cos(theta_2 + theta_3) + a_2*cos(theta_2), a_3*cos(theta_2 + theta_3), 0, 0, 0],
[d_4*cos(theta_1) - 1.0*a_2*cos(theta_2)*sin(theta_1) - 1.0*a_3*cos(theta_2)*cos(theta_3)*sin(theta_1) + a_3*sin(theta_1)*sin(theta_2)*sin(theta_3), -1.0*cos(theta_1)*(a_3*sin(theta_2 + theta_3) + a_2*sin(theta_2)), -1.0*a_3*sin(theta_2 + theta_3)*cos(theta_1), 0, 0, 0],
[d_4*sin(theta_1) + a_2*cos(theta_1)*cos(theta_2) + a_3*cos(theta_1)*cos(theta_2)*cos(theta_3) - 1.0*a_3*cos(theta_1)*sin(theta_2)*sin(theta_3), -1.0*sin(theta_1)*(a_3*sin(theta_2 + theta_3) + a_2*sin(theta_2)), -1.0*a_3*sin(theta_2 + theta_3)*sin(theta_1), 0, 0, 0],
[0, a_3*cos(theta_2 + theta_3) + a_2*cos(theta_2), a_3*cos(theta_2 + theta_3), 0, 0, 0],
[d_4*cos(theta_1) - 1.0*d_5*(cos(theta_4)*(cos(theta_2)*sin(theta_1)*sin(theta_3) + cos(theta_3)*sin(theta_1)*sin(theta_2)) - 1.0*sin(theta_4)*(sin(theta_1)*sin(theta_2)*sin(theta_3) - 1.0*cos(theta_2)*cos(theta_3)*sin(theta_1))) - 1.0*a_2*cos(theta_2)*sin(theta_1) - 1.0*a_3*cos(theta_2)*cos(theta_3)*sin(theta_1) + 1.0*a_3*sin(theta_1)*sin(theta_2)*sin(theta_3), -1.0*cos(theta_1)*(a_3*sin(theta_2 + theta_3) + a_2*sin(theta_2) - 1.0*d_5*cos(theta_2 + theta_3 + theta_4)), -1.0*cos(theta_1)*(a_3*sin(theta_2 + theta_3) - 1.0*d_5*cos(theta_2 + theta_3 + theta_4)), d_5*cos(theta_2 + theta_3 + theta_4)*cos(theta_1), 0, 0],
[1.0*d_4*sin(theta_1) + d_5*(cos(theta_4)*(cos(theta_1)*cos(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3)*sin(theta_2)) - 1.0*sin(theta_4)*(cos(theta_1)*sin(theta_2)*sin(theta_3) - 1.0*cos(theta_1)*cos(theta_2)*cos(theta_3))) + a_2*cos(theta_1)*cos(theta_2) + a_3*cos(theta_1)*cos(theta_2)*cos(theta_3) - 1.0*a_3*cos(theta_1)*sin(theta_2)*sin(theta_3), -1.0*sin(theta_1)*(a_3*sin(theta_2 + theta_3) + a_2*sin(theta_2) - 1.0*d_5*cos(theta_2 + theta_3 + theta_4)), -1.0*sin(theta_1)*(a_3*sin(theta_2 + theta_3) - 1.0*d_5*cos(theta_2 + theta_3 + theta_4)), d_5*cos(theta_2 + theta_3 + theta_4)*sin(theta_1), 0, 0],
[0, a_3*cos(theta_2 + theta_3) + a_2*cos(theta_2) + d_5*sin(theta_2 + theta_3 + theta_4), a_3*cos(theta_2 + theta_3) + d_5*sin(theta_2 + theta_3 + theta_4), d_5*sin(theta_2 + theta_3 + theta_4), 0, 0],
[d_6*(cos(theta_1)*cos(theta_5) + cos(theta_2 + theta_3 + theta_4)*sin(theta_1)*sin(theta_5)) + d_4*cos(theta_1) - 1.0*a_2*cos(theta_2)*sin(theta_1) - 1.0*d_5*sin(theta_2 + theta_3 + theta_4)*sin(theta_1) - 1.0*a_3*cos(theta_2)*cos(theta_3)*sin(theta_1) + 1.0*a_3*sin(theta_1)*sin(theta_2)*sin(theta_3), -1.0*cos(theta_1)*(a_2*sin(theta_2) - 1.0*d_5*cos(theta_2 + theta_3 + theta_4) + a_3*cos(theta_2)*sin(theta_3) + a_3*cos(theta_3)*sin(theta_2) - 1.0*d_6*sin(theta_2 + theta_3 + theta_4)*sin(theta_5)), cos(theta_1)*(d_5*cos(theta_2 + theta_3 + theta_4) - 1.0*a_3*cos(theta_2)*sin(theta_3) - 1.0*a_3*cos(theta_3)*sin(theta_2) + d_6*sin(theta_2 + theta_3 + theta_4)*sin(theta_5)), cos(theta_1)*(d_5*cos(theta_2 + theta_3 + theta_4) + d_6*sin(theta_2 + theta_3 + theta_4)*sin(theta_5)), -1.0*d_6*(sin(theta_1)*sin(theta_5) + cos(theta_2 + theta_3 + theta_4)*cos(theta_1)*cos(theta_5)), 0],
[1.0*d_4*sin(theta_1) + 1.0*d_6*(cos(theta_5)*sin(theta_1) - 1.0*cos(theta_2 + theta_3 + theta_4)*cos(theta_1)*sin(theta_5)) + a_2*cos(theta_1)*cos(theta_2) + d_5*sin(theta_2 + theta_3 + theta_4)*cos(theta_1) + a_3*cos(theta_1)*cos(theta_2)*cos(theta_3) - 1.0*a_3*cos(theta_1)*sin(theta_2)*sin(theta_3), -1.0*sin(theta_1)*(a_2*sin(theta_2) - 1.0*d_5*cos(theta_2 + theta_3 + theta_4) + a_3*cos(theta_2)*sin(theta_3) + a_3*cos(theta_3)*sin(theta_2) - 1.0*d_6*sin(theta_2 + theta_3 + theta_4)*sin(theta_5)), sin(theta_1)*(d_5*cos(theta_2 + theta_3 + theta_4) - 1.0*a_3*cos(theta_2)*sin(theta_3) - 1.0*a_3*cos(theta_3)*sin(theta_2) + d_6*sin(theta_2 + theta_3 + theta_4)*sin(theta_5)), sin(theta_1)*(d_5*cos(theta_2 + theta_3 + theta_4) + d_6*sin(theta_2 + theta_3 + theta_4)*sin(theta_5)), d_6*cos(theta_1)*sin(theta_5) - 1.0*d_6*cos(theta_2 + theta_3 + theta_4)*cos(theta_5)*sin(theta_1), 0],
[0, a_3*cos(theta_2 + theta_3) + 1.0*d_5*(1.0*cos(theta_2 + theta_3)*sin(theta_4) + 1.0*sin(theta_2 + theta_3)*cos(theta_4)) + a_2*cos(theta_2) + 1.0*d_6*sin(theta_5)*(1.0*sin(theta_2 + theta_3)*sin(theta_4) - 1.0*cos(theta_2 + theta_3)*cos(theta_4)), a_3*cos(theta_2 + theta_3) + d_5*sin(theta_2 + theta_3 + theta_4) - 1.0*d_6*cos(theta_2 + theta_3 + theta_4)*sin(theta_5), d_5*sin(theta_2 + theta_3 + theta_4) - 1.0*d_6*cos(theta_2 + theta_3 + theta_4)*sin(theta_5), -1.0*d_6*sin(theta_2 + theta_3 + theta_4)*cos(theta_5), 0];
